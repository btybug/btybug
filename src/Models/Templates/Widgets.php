<?php
namespace Sahakavatar\Cms\Models\Templates;

use Sahakavatar\Cms\Models\Eloquent\Abstractions\TplModel;

/**
 * Class Widgets
 * @package Sahakavatar\Cms\Models
 */
class Widgets extends TplModel
{
    private $mainSettings = ['fields'];
    /**
     * @var string
     */
    public $variationPath = 'variations';
    /**
     * @var string
     */
    protected $tplpath = 'resources/uiElements';
    /**
     * @var string
     */
    protected $config = 'config.json';

    /**
     * @return static
     */
    public static function getAllWidgets ()
    {
//        $tpl_widgets=[];
        $templates = [];
        $ui_widgets = self::all()->run();
        $tpl = new Templates();
        $tpl_widgets = $tpl->recursiveFindAllWidgets();
        foreach ($ui_widgets as $widget) {
            $templates[] = $widget;
        }
        foreach ($tpl_widgets as $widget) {
            $templates[] = $widget;
        }
        $data = new static;
        $data->before = collect($templates);

        return $data;
    }

    /**
     * @return static
     */
    public static function getAllWidgetsPluck ()
    {
//        $tpl_widgets=[];
        $templates = [];
        $ui_widgets = self::all()->run();
        $tpl = new Templates();
        $tpl_widgets = $tpl->recursiveFindAllWidgets();
        foreach ($ui_widgets as $widget) {
            $templates[$widget->slug] = $widget->title;
        }
        foreach ($tpl_widgets as $widget) {
            $templates[$widget->slug] = $widget->title;
        }
        $data = new static;
        $data->before = collect($templates);

        return $data;
    }

    /**
     * @param $id
     * @return bool
     */
    public static function deleteVariation ($id)
    {
        $slug = explode('.', $id);
        $tpl = self::find($slug[0]);

        return WidgetsVariations::delete($id, $tpl);
    }

    /**
     * @param $id
     * @return null
     */
    public static function findVariation ($id)
    {
//        $variation
        $slug = explode('.', $id);
        $variation = new WidgetsVariations();
        $tpl = self::find($slug[0]);
        return $variation->findVarition($tpl, $id);
    }

    /**
     * @return mixed
     */
    public function section ()
    {
        return $this->belongsTo('App\Modules\Sections\Sections', 'section_id');
    }

    /**
     * @return mixed
     */
    public function variations ()
    {
        return $this->allVars('Sahakavatar\Cms\Models\TplVariations');
    }

    /**
     * @param $array
     * @return mixed
     */
    public function makeVariation ($array)
    {
        $vars = new TplVariations();

        return $vars->createVariation($this, $array); // TODO: Change the autogenerated stub
    }

    public function renderMainSettings (array $variables = [])
    {
        if(in_array($this->main_type ,$this->mainSettings)){
            $options = parent::renderOptions($variables);
            $styles = parent::renderStyles($variables);
            return \View::make("resources::widgets.main_settings",compact(['options','styles']))->render();
        }

        return parent::renderSettings($variables);
    }

}